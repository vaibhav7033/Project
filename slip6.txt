A) Write an Android code to complete the following Array/List operations

Activity_main.xml
<?xml version="1.0" encoding="utf-8"?>
<TableLayout xmlns:android="http://schemas.android.com/apk/res/android"
xmlns:app="http://schemas.android.com/apk/res-auto"
xmlns:tools="http://schemas.android.com/tools"
android:layout_width="match_parent"
android:layout_height="match_parent"
tools:context=".MainActivity">
<TableRow
android:orientation="horizontal">
<TextView
android:layout_width="wrap_content"
android:layout_height="100dp"
android:text="List1" />
<EditText
android:layout_height="50dp"
android:layout_width="100dp"
android:id="@+id/l1"/>
</TableRow>
<TableRow
android:orientation="horizontal">
<TextView
android:layout_width="wrap_content"
android:layout_height="100dp"
android:text="List2" />
<EditText
android:layout_height="50dp"
android:layout_width="100dp"
android:id="@+id/l2"/>
</TableRow>
<TableRow
android:orientation="vertical">
<RadioGroup
android:id="@+id/rg"
android:layout_width="wrap_content"
android:layout_height="wrap_content">
<RadioButton
android:id="@+id/rd1"
android:layout_width="wrap_content"
android:layout_height="wrap_content"
android:text="Union" />
<RadioButton
android:id="@+id/rd2"
android:layout_width="wrap_content"
android:layout_height="wrap_content"
android:text="Intersection" />
</RadioGroup>
<Button
android:layout_height="wrap_content"
android:layout_width="wrap_content"
android:text="SHOW"
android:id="@+id/btn"/>
</TableRow>
</TableLayout>
MainActivity.java
package com.example.myunionintersection;
import androidx.appcompat.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.Toast;
import java.util.ArrayList;
import java.util.Collections;
public class MainActivity extends AppCompatActivity {
EditText list1, list2;
String str1="", str2="";
RadioGroup rg;
RadioButton rd1, rd2;
Button btn;
ArrayList<String> l1, l2;
@Override
protected void onCreate(Bundle savedInstanceState) {
super.onCreate(savedInstanceState);
setContentView(R.layout.activity_main);
rg = (RadioGroup) findViewById(R.id.rg);
btn = (Button) findViewById(R.id.btn);
btn.setOnClickListener(new View.OnClickListener() {
@Override
public void onClick(View view) {
list1 = (EditText) findViewById(R.id.l1);
list2 =(EditText) findViewById(R.id.l2);
str1 = list1.getText().toString();
str2 = list2.getText().toString();
//String[] strl1 = str1.split(",");
//String[] strl2 = str2.split(",");
l1 = new ArrayList<String>(Collections.singleton(str1));
l2 = new ArrayList<String>(Collections.singleton(str2));
int id = rg.getCheckedRadioButtonId();
switch(id){
case R.id.rd1:l1.addAll(l2);
Toast.makeText(MainActivity.this, "Union=" + l1.toString(),
Toast.LENGTH_SHORT).show();
break;
case R.id.rd2:l1.retainAll(l2);
Toast.makeText(MainActivity.this, "Intersection=" + l1.toString(),
Toast.LENGTH_SHORT).show();
break;
default:
Toast.makeText(MainActivity.this, "Please select radio button",
Toast.LENGTH_SHORT).show();
}
}
});
}
}




B) Java Android Program to demonstrate login form with validation.


ActivityMain.xml
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
xmlns:app="http://schemas.android.com/apk/res-auto"
xmlns:tools="http://schemas.android.com/tools"
android:layout_width="match_parent"
android:layout_height="match_parent"
android:background="@color/teal_700"
tools:context=".MainActivity">
<LinearLayout
android:layout_width="match_parent"
android:layout_height="wrap_content"
android:orientation="vertical"
android:layout_marginLeft="16dp"
android:layout_marginRight="16dp"
android:layout_centerInParent="true">
<EditText
android:layout_width="match_parent"
android:layout_height="wrap_content"
android:hint="Enter Email"
android:id="@+id/et1"/>
<EditText
android:layout_width="match_parent"
android:layout_height="wrap_content"
android:hint="Enter Password"
android:id="@+id/et2"
android:inputType="textPassword"
/>
<Button
android:layout_width="match_parent"
android:layout_height="wrap_content"
android:text="Login"
android:background="#3f76ff"
android:textColor="#fff"
android:id="@+id/b"/>
<TextView
android:layout_width="match_parent"
android:layout_height="wrap_content"
android:text="Not a member? Sign in"
android:textAlignment="center"
android:textSize="30dp"/>
</LinearLayout>
</RelativeLayout>
MainActivity.java
package com.example.myassignment_1;
import androidx.appcompat.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;
import com.basgeekball.awesomevalidation.AwesomeValidation;
import com.basgeekball.awesomevalidation.ValidationStyle;
public class MainActivity extends AppCompatActivity {
@Override
protected void onCreate(Bundle savedInstanceState) {
super.onCreate(savedInstanceState);
setContentView(R.layout.activity_main);
EditText et1 = (EditText) findViewById(R.id.et1);
EditText et2 = (EditText) findViewById(R.id.et2);
Button b = (Button) findViewById(R.id.b);
AwesomeValidation av = new AwesomeValidation(ValidationStyle.BASIC);
b.setOnClickListener(new View.OnClickListener() {
@Override
public void onClick(View view) {
{
String e1 = et1.getText().toString();
String e2 = et1.getText().toString();
av.addValidation(et1, "^[A-Za-z\\s]{1,}[\\.]{0,1}[A-Za-z\\s]{0,}$",
"invalid");
av.addValidation(et2, "\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"",
"wrong pass");
if(e1.equals("")||e2.equals(""))
{
Toast toast = Toast.makeText(getApplicationContext(), "Invalid emailid ",
Toast.LENGTH_SHORT);
toast.setMargin(50, 50);
toast.show();
}
else
{
if (et1.equals("abc@gmail.com")) {
if (et2.equals("abc12356")) {
av.validate();
{
Toast toast = Toast.makeText(getApplicationContext(), "Invalid
pass ", Toast.LENGTH_SHORT);
toast.setMargin(50, 50);
toast.show();
}
}
}
}
}
}
});}}



A) Write a C program to map a given file in memory and display the contain of mapped file in reverse



#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <sys/io.h>
#include <sys/mman.h>
int main(int argc, char *argv[])
{
unsigned char *f, *g;
int size;
struct stat s;
const char * file_name = argv[1];
int fd = open(argv[1], O_RDONLY);
int status = fstat(fd, &s);
size = s.st_size;
int i;
f = (char *) mmap (0, size, PROT_READ, MAP_PRIVATE, fd, 0);
//g = (char *) mmap (0, size, PROT_READ, MAP_PRIVATE, fd, 0);
for(i = 0; i < size; i++) {
char c;
c = f[i];
putchar(c);
}
//ABOVE THIS WORKS
// int z = 0;
//while(f[z] != NULL) {
//z++;
// printf("%d", z);
// }
int x;
int y = 0;
close(fd);
FILE *f1;
f1 = fopen(argv[2], "w+");
for(x = size - 1; x >= 0; x--)
{
char c;
c = f[x];
fputc(c, f1);
}
return 0;
}


B) Write a C program that behaves like a shell (command interpreter). It has its own prompt say
“NewShell$”. Any normal shell command is executed from your shell by starting a child process to
execute the system program corresponding to the command. It should additionally interpret the
following command.
i) list f<dirname> - print name of all files in directory
ii) list n <dirname> - print number of all entries
iii) list i<dirname> - print name and inode of all files




#include<stdio.h>
#include<stdlib.h>
#include<unistd.h>
#include<dirent.h>
char *buff,*t1,*t2,*t3,ch;
int pid;
void list(char t2,char *t3)
{
DIR *dir;
struct dirent *entry;
int cnt=0;
dir=opendir(t3);
if (dir==NULL)
{
printf("Directory %s not found",t3);
return;
}
switch(t2)
{
case 'f' : while((entry=readdir(dir))!=NULL)
{
printf("%s\n",entry->d_name);
}
break;
case 'n' : while((entry=readdir(dir))!=NULL)
cnt++;
printf("Total No of Entries: %d\n",cnt);
break;
case 'i' : while((entry=readdir(dir))!=NULL)
{
printf("\n%s\t %d",entry->d_name,entry->d_ino);
}
break;
default : printf("Invalid argument");
}
closedir(dir);
}
main()
{
while(1)
{
printf("myshell$");
fflush(stdin);
t1=(char *)malloc(80);
t2=(char *)malloc(80);
t3=(char *)malloc(80);
buff=(char *)malloc(80);
fgets(buff,80,stdin);
sscanf(buff,"%s %s %s",t1,t2,t3);
if(strcmp(t1,"pause")==0)
exit(0);
else if(strcmp(t1,"list")==0)
list(t2[0],t3);
else
{
pid=fork();
if(pid<0)
printf("Child process is not created\n");
else if(pid==0)
{
execlp("/bin",NULL);
if(strcmp(t1,"exit")==0)
exit(0);
system(buff);
}
else
{
wait(NULL);
exit(0);
}
}
}
}
/*Output:-
[root@localhost ass1]# ./a.out
myshell$list f ass2
rr.C
NPSJP.C
PSJF.C
PRIORITY.BAK
..
.
PP.BAK
PRIORITY.C
PP.C
myshell$list n ass2
Total No of Entries: 9
myshell$list i ass2
rr.C 1452033
NPSJP.C 1452013
PSJF.C 1452032
PRIORITY.BAK 1452016
.. 1451875
. 1452001
PP.BAK 1452014
PRIORITY.C 1452017
PP.C 1452015
myshell$ls
#a.c# a.out ass2 a.txt b.c count.c list.c search.c s.txt typeline.c
myshell$pause
*/
-------------------------------------------------------------------------------------------------------------------------------







